# develop branch에 push시 빌드 후 서버에 업로드 & 실행
name: Jimkanman CI/DE Java with Gradle (on develop branch)

on:
  push:
    branches: [ "develop", "dev" ]

permissions:
  contents: read

jobs:
  build:
    name: Build in Github Actions
    runs-on: ubuntu-22.04

    steps:
      # 저장소 Checkout하여 코드 가져오기
      - name: Checkout branch
        uses: actions/checkout@v3

      # 최신 커밋 출력하기 (확인용)
      - name: Show latest commit
        run: |
          latest_commit=$(git log -1 --pretty=format:"%h %s (%an)")
          echo "Latest commit: $latest_commit"

      # Java 버전 세팅
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'

      # yml 파일 복사
      - name: Copy secret
        env:
          APPLICATION_FILE: ${{ secrets.APPLICATION_PROFILE }}
          APPLICATION_FILE_NAME: application.yml
          DIR: ./src/main/resources
        run: |
          touch $DIR/$APPLICATION_FILE_NAME
          echo "$APPLICATION_FILE" > $DIR/$APPLICATION_FILE_NAME

      # gradlew 실행 권한 부여
      - name: Run chmod to make gradlew executable
        run: chmod +x ./gradlew
        shell: bash

      # JAR 파일 생성
      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash

      - name: Upload Build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: |
            build/libs/*.jar

  deploy:
    name: Deliver using SSH
    needs: build
    runs-on: ubuntu-22.04

    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-artifacts

      # SCP로 JAR 파일을 EC2에 배포
      - name: SCP JAR to EC2
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.EC2_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          source: "build/libs/*.jar"
          target: "/home/ubuntu/app"

      # SCP로 프로젝트 코드 EC2에 붙여넣기
      - name: SCP project source code to EC2
        uses: appleboy/scp-action@master
        with:
          key: ${{ secrets.EC2_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          source: "src/"
          target: "/home/ubuntu/app"

      # EC2에서 JAR 실행
      - name: Deploy SSH
        uses: appleboy/ssh-action@master
        with:
          key: ${{ secrets.EC2_KEY }}
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          # 8080 포트에서 실행 중인 서버 종료 후 재실행
          script: |
            sudo fuser -k -n tcp 8080
            sleep 15
            sudo nohup java -jar -Duser.timezone=Asia/Seoul ./app/build/libs/*.jar > ./nohup.out 2>&1 &
